name: Deploy to EKS

on:
  push:
    branches:
      - main  # or your default branch
  pull_request:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Log in to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build Docker image and push to ECR
      run: |
        docker build -t ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:latest .
        docker push ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }}:latest

    - name: Set up Helm
      run: |
        curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
        helm repo add stable https://charts.helm.sh/stable
        helm repo update

    - name: Configure kubectl for EKS
      run: |
        aws eks update-kubeconfig --region ${{ secrets.AWS_REGION }} --name SampleEKSCluster

    - name: Deploy NGINX with Helm to EKS
      run: |
        helm upgrade --install my-app ./nginx-helm --namespace default \
        --set image.repository=${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_NAME }} \
        --set image.tag=latest \
        --set service.type=LoadBalancer

    - name: Wait for LoadBalancer to be provisioned
      run: |
        kubectl rollout status deployment/my-app -n default --timeout=600s
        kubectl get svc my-app -n default
